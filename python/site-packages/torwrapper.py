#/usr/bin/env python

import re
import socks
import socket
import urllib2

class TorWrapper:
	_TORHOST = "localhost"
	_TORPORT = 9050

	def __init__(self):
		socks.setdefaultproxy(socks.PROXY_TYPE_SOCKS5, self._TORHOST, self._TORPORT)

	def on(self, verbose=False):
		"""
		Enable passing through Tor Relay for all future connections
		in this instance of the script.

		@param verbose: True to show the relay IP connected to.
		"""

		self._orig_sock = socket.socket

		socket.socket = socks.socksocket 
		self._orig_create_connection = socket.create_connection

		socket.create_connection = self.create_connection

		if verbose:
			print "Connected to Tor Relay."
			self.show_ip()

	def off(self, verbose=False):
		"""
		Disable tor relaying for future connections.

		@param verbose: True to print system ip after disconnecting from tor. 
		"""

		socket.socket = self._orig_sock

		socket.create_connection = self._orig_create_connection

		if verbose:
			print "Disconnected from Tor."

			self.show_ip()

	def create_connection(self, address, timeout=None, source_address=None): 
		sock = socks.socksocket() 

		sock.connect(address)

		return sock

	def show_ip(self):
		thisip = ''

		try:
			thisip = urllib2.urlopen('http://checkip.dyndns.org/').read()

		except Exception as e:
			print "EXCEPT %s" % e
			pass

		ip = re.findall('\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}', thisip)[0]

		try:
			name = socket.gethostbyaddr(ip)[0]

		except socket.herror:
			name = ""

		print "My ip is %s (%s)" % (ip, name)
